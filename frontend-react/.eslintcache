[{"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/index.js":"1","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Main.js":"2","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Home.js":"3","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Admin.js":"4","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Contact.js":"5","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Menu.js":"6","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/config/Fire.js":"7","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/MapContainer.jsx":"8","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/components/LoginRegister.js":"9","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/components/LogOut.js":"10","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/utils.js":"11","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Vendor.js":"12","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/ordersTable.js":"13","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/InfoWindowWrapper.js":"14"},{"size":180,"mtime":1615697166248,"results":"15","hashOfConfig":"16"},{"size":4196,"mtime":1615777513715,"results":"17","hashOfConfig":"16"},{"size":545,"mtime":1615765143660,"results":"18","hashOfConfig":"16"},{"size":5903,"mtime":1615525910535,"results":"19","hashOfConfig":"16"},{"size":399,"mtime":1613095535275,"results":"20","hashOfConfig":"16"},{"size":5244,"mtime":1615777513716,"results":"21","hashOfConfig":"16"},{"size":443,"mtime":1614740741803,"results":"22","hashOfConfig":"16"},{"size":4465,"mtime":1615777710387,"results":"23","hashOfConfig":"16"},{"size":2897,"mtime":1615268494520,"results":"24","hashOfConfig":"16"},{"size":339,"mtime":1614906369481,"results":"25","hashOfConfig":"16"},{"size":362,"mtime":1615532885012,"results":"26","hashOfConfig":"16"},{"size":924,"mtime":1615525910541,"results":"27","hashOfConfig":"16"},{"size":1660,"mtime":1615525910543,"results":"28","hashOfConfig":"16"},{"size":770,"mtime":1615777513715,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6x5xf",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/index.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Main.js",["65"],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Home.js",["66","67","68"],"import React, {Component} from 'react';\nimport fire from '../src/config/Fire';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>This is your current role: {this.props.user.role_name}</h2>\n                <h2>This is your current ID: {this.props.user.person_id || \"no id\"}</h2>\n                <p>This is a bunch of text!</p>\n                <p>This a bunch more text!</p>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n",["69","70"],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Admin.js",["71"],"import React, {Component} from 'react';\nimport {Form, Nav, Button} from 'react-bootstrap';\nimport logHelper from \"./utils\";\n\n\nclass Admin extends React.Component {\n\n    state = {\n        logItems: [],\n        tabKey: \"1\",\n        newHotdogName: \"\",\n        newHotdogImgUrl: \"\",\n        newHotdogPrice: 0,\n    }\n\n    componentDidMount() {\n        fetch(\"/logging\")\n            .then(res => res.json())\n            .then(logItems => this.setState({logItems}))\n            .then(ignored => console.log(this.state)); // remove this log statement at some point\n    }\n\n    handleSelect = (eventKey) => {\n        this.setState({tabKey: eventKey})\n        console.log(this.state.tabKey === \"1\")\n    }\n\n    createNewVendor = () => {\n        logHelper({adminAction: \"Admin created a new vendor!\"})\n        console.log(\"vendor form created\");\n    }\n\n    showNewVendorForm() {\n        return <form onSubmit={this.createNewVendor}>\n            <label>\n                <center>New Vendor Account<br/><br/></center>\n                Vendor Name: <input type=\"text\"/>\n                Vendor email: <input type=\"text\"/><br/><br/>\n                <input type=\"button\" value=\"Submit\"/>\n            </label>\n        </form>\n    }\n\n    addMenuItem = () => {\n        logHelper({adminAction: \"Admin created a new hotdog!\"}) // TODO add some details here\n        const newHotDog = {\n            hotdog_name: this.state.newHotdogName,\n            hotdog_image: this.state.newHotdogImgUrl,\n            hotdog_price: this.state.newHotdogPrice\n        }\n        fetch(\"/menu\", {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(newHotDog)\n        }).then(result => result.json())\n    }\n\n    showAddMenuItemForm() {\n        return <Form onSubmit={this.addMenuItem}>\n            <Form.Label>Hotdog Name</Form.Label>\n            <Form.Control placeholder=\"some name\" onChange={(e) => this.setState({newHotdogName: e.target.value})}\n                          required/>\n            <Form.Label>Image Url</Form.Label>\n            <Form.Control placeholder=\"some name\" onChange={(e) => this.setState({newHotdogImgUrl: e.target.value})}\n                          required/>\n            <Form.Label>Price</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"decimal format, e.g. 1.20\"\n                          onChange={(e) => this.setState({newHotdogPrice: e.target.value})} required/>\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n        </Form>\n    }\n\n    showAdminLogConsole() {\n        return <p className=\"consoleLog\">\n            {this.state.logItems.map(item => <div>{item.log_timestamp + '\\t' + item.log_line}</div>)}\n        </p>\n    }\n\n    render() {\n        return (\n            <div>\n                <Nav fill variant=\"tabs\" className=\"adminBar\">\n                    <Nav.Link eventKey={1} onSelect={this.handleSelect}>Add Vendor</Nav.Link>\n                    <Nav.Link eventKey={2} onSelect={this.handleSelect}>View Console</Nav.Link>\n                    <Nav.Link eventKey={3} onSelect={this.handleSelect}>Add Menu Item</Nav.Link>\n                </Nav>\n                {this.state.tabKey === \"1\" && this.showNewVendorForm()}\n                {this.state.tabKey === \"2\" && this.showAdminLogConsole()}\n                {this.state.tabKey === \"3\" && this.showAddMenuItemForm()}\n            </div>\n        )\n    }\n}\n\n\nexport default Admin;\n","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Contact.js",["72"],"import React, { Component } from 'react';\n\n\nclass Contact extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <p>This is contact</p>\n                <ul>\n                    <li>Some stuff</li>\n                    <li>Some stuff</li>\n                    <li>Some stuff</li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Contact;\n","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Menu.js",["73","74"],"import React, {Component} from 'react';\nimport {Button, CardDeck, Card} from 'react-bootstrap';\nimport logHelper from \"./utils\";\n\n\nclass Menu extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleIncrement.bind(this);\n        this.handleDecrement.bind(this);\n        this.numberOrdered.bind(this);\n        this.onSubmit.bind(this);\n    }\n\n    state = {menuItems: [], orderedItems: [], orderTotal: 0}\n\n    componentDidMount() {\n        fetch(\"/menu/\" + this.props.vendorId)\n            .then(res => res.json())\n            .then(menuItems => this.setState({menuItems}))\n            .then(ignored => console.log(this.state)); // remove this log statement at some point\n    }\n\n    handleIncrement = (hotdogId, price) => {\n        const currentOrders = [...this.state.orderedItems];\n        const orderIndex = currentOrders.findIndex(element => element.hotdog_id === hotdogId);\n        if (orderIndex !== -1) {\n            currentOrders.splice(orderIndex, 1, {\n                \"hotdog_id\": hotdogId,\n                \"quantity\": currentOrders[orderIndex].quantity + 1,\n                \"vendor_id\": this.props.vendorId\n            });\n        } else {\n            currentOrders.push({\"hotdog_id\": hotdogId, \"quantity\": 1, \"vendor_id\": this.props.vendorId});\n        }\n        const newOrderTotal = this.state.orderTotal + parseFloat(price);\n        this.setState({orderedItems: currentOrders, orderTotal: newOrderTotal});\n    }\n\n    handleDecrement = (hotdogId, price) => {\n        let newOrderTotal = this.state.orderTotal;\n        const currentOrders = [...this.state.orderedItems];\n        if (currentOrders.length > 0) {\n            const orderIndex = currentOrders.findIndex(element => element.hotdog_id === hotdogId);\n            if (orderIndex !== -1) {\n                if (currentOrders[orderIndex].quantity > 0) {\n                    currentOrders.splice(orderIndex, 1, {\n                        \"hotdog_id\": hotdogId,\n                        \"quantity\": currentOrders[orderIndex].quantity - 1,\n                        \"vendor_id\": this.props.vendorId\n                    })\n                    newOrderTotal -= price;\n                    this.setState({orderedItems: currentOrders, orderTotal: newOrderTotal})\n                }\n            }\n        }\n    }\n\n    numberOrdered = (id) => {\n        const found = this.state.orderedItems.find(ele => ele.hotdog_id == id);\n        return found ? found.quantity : 0;\n    }\n\n    onSubmit = () => {\n        //first thing we do is close modal because that is only customer facing action\n        this.props.showModal();\n        if (this.state.orderedItems.length > 0) {\n            logHelper({logline: \"order submitted at location \" + this.state.orderedItems[0].vendor_id})\n            fetch(\"/orders\", {\n                method: \"POST\",\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(this.state.orderedItems)\n            }).then(result => result.json())\n        }\n    }\n\n\n    render() {\n        return (\n            <div id=\"carddecdiv\">\n                <CardDeck>\n                    {this.state.menuItems.map(menuItem =>\n                        <div key={menuItem.hotdog_id}>\n                            <Card>\n                                <Card.Img id={menuItem.hotdog_id}                                   \n                                   src={menuItem.hotdog_image}>\n                                </Card.Img>\n                                <Card.Body id={menuItem.hotdog_id}>\n                                    <Card.Title>{menuItem.hotdog_name}</Card.Title>\n                                    {this.numberOrdered(menuItem.hotdog_id) !== 0 &&\n                                    <Card.Text>number in cart: {this.numberOrdered(menuItem.hotdog_id)}</Card.Text>\n                                    }\n                                    <Button variant=\"outline-dark\"\n                                            onClick={() => this.handleIncrement(menuItem.hotdog_id, menuItem.hotdog_price)}>\n                                        +\n                                    </Button>\n                                    <Button variant=\"outline-dark\"\n                                            onClick={() => this.handleDecrement(menuItem.hotdog_id, menuItem.hotdog_price)}>\n                                        -\n                                    </Button>\n                                </Card.Body>\n                                <Card.Footer>${menuItem.hotdog_price}</Card.Footer>\n                            </Card>\n                        </div>\n                    )}\n                </CardDeck>\n                <Button variant=\"primary\" onClick={this.onSubmit}> Submit your order!\n                    ${this.state.orderTotal.toFixed(2)} </Button>\n            </div>\n        );\n    }\n}\n\nexport default Menu;\n","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/config/Fire.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/MapContainer.jsx",["75"],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/components/LoginRegister.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/components/LogOut.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/utils.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Vendor.js",["76","77","78"],"import React, {Component} from 'react';\nimport {Form, Nav, Button} from 'react-bootstrap';\nimport OrdersTable from './ordersTable';\n\nclass Vendor extends React.Component {\n\n    state = {\n        tabKey: \"1\",\n        orders: [],\n\n    }\n\n    handleSelect = (eventKey) => {\n        this.setState({tabKey: eventKey})\n        console.log(this.state.tabKey === \"1\")\n    }\n    render() {\n        return (\n            <div>\n                <Nav fill variant=\"tabs\" className=\"vendorBar\">\n                    <Nav.Link eventKey={1} onSelect={this.handleSelect}>Orders</Nav.Link>\n                    <Nav.Link eventKey={2} onSelect={this.handleSelect}>Update Location</Nav.Link>\n                    <Nav.Link eventKey={3} onSelect={this.handleSelect}>Update Menu</Nav.Link>\n                </Nav>\n                {this.state.tabKey === \"1\" && <OrdersTable/>}\n\n\n            </div>\n            \n        )\n    }\n}\n\nexport default Vendor;","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/ordersTable.js",["79","80","81","82"],"import React, { Component } from 'react';\nimport { Form, Nav, Button } from 'react-bootstrap';\n\n\n\nclass OrdersTable extends React.Component {\n\n    state = {\n        orders: [],\n\n    }\n\n    componentDidMount() {\n        fetch('/orders')\n            .then(res => {\n                res.json().then(body => {\n                    console.log(`body: ${JSON.stringify(body)}`);\n                    this.setState({ orders: body });\n                });\n            })\n    }\n\n    onClickComplete(orderId) {\n        console.log(`Clicked complete on id ${orderId}`)\n        fetch('/orders/status', {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(orderId)\n        }).then(result => console.log(result))\n\n\n    };\n\n\n\n    render() {\n\n        if (!this.state.orders) {\n            return;\n        }\n        const rows = this.state.orders.map(order => (\n            <tr>\n                <td>{order.order_id}</td>\n                <td>{order.date}</td>\n                <td>{order.location_id}</td>\n                <td>{order.person_id}</td>\n                <td>{order.complete}</td>\n                <td><button onClick={() => this.onClickComplete(order.order_id)}>Complete</button></td>\n            </tr>\n        ));\n        return (\n\n\n            <table style={{ \"borderWidth\": \"1px\", \"border-spacing\": \"5px\", 'borderColor': \"#aaaaaa\", 'borderStyle': 'solid' }}>\n                <tr><td>Order id</td><td>Date</td><td>Location</td><td>Customer</td><td>Status</td><td>Actions</td></tr>\n                {rows}\n            </table>\n\n        )\n    }\n}\n\nexport default OrdersTable;","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/InfoWindowWrapper.js",[],{"ruleId":"83","severity":1,"message":"84","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":12},{"ruleId":"88","severity":1,"message":"89","line":5,"column":5,"nodeType":"90","messageId":"91","endLine":7,"endColumn":6},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":62,"column":73,"nodeType":"98","messageId":"99","endLine":62,"endColumn":75},{"ruleId":"83","severity":1,"message":"84","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"100","line":2,"column":9,"nodeType":"85","messageId":"86","endLine":2,"endColumn":13},{"ruleId":"83","severity":1,"message":"101","line":2,"column":20,"nodeType":"85","messageId":"86","endLine":2,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"100","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":14},{"ruleId":"83","severity":1,"message":"102","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":19},{"ruleId":"83","severity":1,"message":"101","line":2,"column":21,"nodeType":"85","messageId":"86","endLine":2,"endColumn":27},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'fire' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'Button' is defined but never used.","'Nav' is defined but never used.","no-global-assign","no-unsafe-negation"]