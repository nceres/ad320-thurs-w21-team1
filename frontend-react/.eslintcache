[{"C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\index.js":"1","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Main.js":"2","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Contact.js":"3","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Home.js":"4","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\utils.js":"5","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Admin.js":"6","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Menu.js":"7","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\config\\Fire.js":"8","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\components\\LoginRegister.js":"9","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\components\\LogOut.js":"10","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Vendor.js":"11","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\MapContainer.jsx":"12","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\ordersTable.js":"13"},{"size":189,"mtime":1614222652403,"results":"14","hashOfConfig":"15"},{"size":3418,"mtime":1615681406722,"results":"16","hashOfConfig":"15"},{"size":419,"mtime":1614222652399,"results":"17","hashOfConfig":"15"},{"size":849,"mtime":1614660054340,"results":"18","hashOfConfig":"15"},{"size":378,"mtime":1614908495061,"results":"19","hashOfConfig":"15"},{"size":6061,"mtime":1615514185047,"results":"20","hashOfConfig":"15"},{"size":5026,"mtime":1615348857438,"results":"21","hashOfConfig":"15"},{"size":456,"mtime":1614650247342,"results":"22","hashOfConfig":"15"},{"size":2982,"mtime":1615348857447,"results":"23","hashOfConfig":"15"},{"size":357,"mtime":1614908495014,"results":"24","hashOfConfig":"15"},{"size":957,"mtime":1615681395287,"results":"25","hashOfConfig":"15"},{"size":4210,"mtime":1615681406730,"results":"26","hashOfConfig":"15"},{"size":1724,"mtime":1615514185052,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"wwmofw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\index.js",[],["64","65"],"C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Main.js",["66"],"import React, {Component} from 'react';\r\nimport fire from '../src/config/Fire';\r\nimport Login from '../src/components/LoginRegister';\r\nimport LogOut from './components/LogOut';\r\nimport Popup from 'reactjs-popup';\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport Home from './Home';\r\nimport Menu from './Menu';\r\nimport Contact from './Contact';\r\nimport MapContainer from './MapContainer';\r\nimport Admin from './Admin';\r\nimport Vendor from './Vendor';\r\n\r\nclass Main extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          user: null\r\n        }\r\n      }\r\n    \r\n    state = {\r\n        selectedView: \"customer\"\r\n    }\r\n\r\n    handleOnClick = (viewClicked) => {\r\n        this.setState({selectedView: viewClicked});\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.selectedView);\r\n        this.authListener();\r\n    }\r\n\r\n    authListener(){\r\n        fire.auth().onAuthStateChanged((user) => {\r\n          if(user){\r\n            this.setState({user});\r\n          }else{\r\n            this.setState({user:null});\r\n          }\r\n        });\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <div className=\"container\">\r\n                \r\n                    <h1 className=\"title\">Dog Eat Dog World</h1>\r\n                    <ButtonGroup className=\"buttonGroup\">\r\n                        <Button variant=\"primary\" onClick={() => this.handleOnClick(\"customer\")}>Customer</Button>\r\n                        <Button variant=\"info\" onClick={() => this.handleOnClick(\"vendor\")}>Vendor</Button>\r\n                        <Button variant=\"success\" onClick={() => this.handleOnClick(\"admin\")}>Admin</Button>\r\n                            <Popup trigger={<button className=\"login\"> Login</button>} position=\"left center\">\r\n                            <div className=\"logout\">\r\n                             {this.state.user ? (<LogOut />) : (<Login />)}\r\n                             </div>\r\n                            </Popup>\r\n                    </ButtonGroup>\r\n                    <ul className=\"headerMenu\">\r\n                        <li><NavLink exact to=\"/\">Home</NavLink></li>\r\n                        <li><NavLink to=\"/menu\">Menu</NavLink></li>\r\n                        <li><NavLink to=\"/contact\">Contact</NavLink></li>\r\n                        <li><NavLink to=\"/mapContainer\">Map</NavLink></li>\r\n                        {this.state.selectedView === \"admin\" && <li><NavLink to=\"/admin\">Admin</NavLink></li>\r\n                        }\r\n                        {this.state.selectedView === \"vendor\" && <li><NavLink to=\"/vendor\">Vendor</NavLink></li>\r\n                        }\r\n                    </ul>\r\n                    <div className=\"contents\">\r\n                        <Route exact path=\"/\" component={ Home }></Route>\r\n                        <Route path=\"/menu\" component={ Menu }></Route>\r\n                        <Route path=\"/contact\" component={ Contact }></Route>\r\n                        <Route path=\"/mapContainer\" component={ MapContainer }></Route>\r\n                        <Route path=\"/admin\" component={ Admin }></Route>\r\n                        <Route path=\"/vendor\" component={ Vendor }></Route>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Contact.js",["67"],"import React, { Component } from 'react';\r\n\r\n\r\nclass Contact extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>This is contact</p>\r\n                <ul>\r\n                    <li>Some stuff</li>\r\n                    <li>Some stuff</li>\r\n                    <li>Some stuff</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Home.js",["68"],"import React, { Component } from 'react';\r\nimport fire from '../src/config/Fire';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { apiResponse: \"\" };\r\n    }\r\n\r\n    callBackend() {\r\n        console.log(\"api called\");\r\n        fetch(\"/users\")\r\n            .then(res => res.text())\r\n            .then(res => this.setState({ apiResponse: res }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.callBackend();\r\n    }\r\n\r\n    logout = () => {\r\n        fire.auth().signOut();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Hey, you're home!</h2>\r\n                <p>This is a bunch of text!</p>\r\n                <p>This a bunch more text!</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\utils.js",[],"C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Admin.js",["69"],"import React, {Component} from 'react';\r\nimport {Form, Nav, Button} from 'react-bootstrap';\r\nimport logHelper from \"./utils\";\r\n\r\n\r\nclass Admin extends React.Component {\r\n\r\n    state = {\r\n        logItems: [],\r\n        tabKey: \"1\",\r\n        newHotdogName: \"\",\r\n        newHotdogImgUrl: \"\",\r\n        newHotdogPrice: 0,\r\n        menuItemsToDelete: [],\r\n        masterMenuItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/logging\")\r\n            .then(res => res.json())\r\n            .then(logItems => this.setState({logItems}))\r\n            .then(ignored => console.log(this.state)); // remove this log statement at some point\r\n        fetch(\"/menu\")\r\n            .then(res => res.json())\r\n            .then(masterMenuItems => this.setState({masterMenuItems}))\r\n\r\n    }\r\n\r\n    handleSelect = (eventKey) => {\r\n        this.setState({tabKey: eventKey})\r\n        console.log(this.state.tabKey === \"1\")\r\n    }\r\n\r\n    createNewVendor = (event) => {\r\n        logHelper({adminAction:\"Admin created a new vendor!\"})\r\n        event.preventDefault()\r\n        console.log(event.target[0].value)\r\n        console.log(event.target[1].value)\r\n        console.log(event.target[2].value)        \r\n        console.log(\"vendor form created\")\r\n    }\r\n\r\n    showNewVendorForm() {\r\n        return <form onSubmit={this.createNewVendor}>\r\n            <label>\r\n                <center>New Vendor Account<br/><br/></center>\r\n            Vendor Name:\r\n            <input type=\"text\"name=\"vendorName\"ref={node => (this.inputNode = node)}/>\r\n            Vendor Email:\r\n            <input type=\"text\"email=\"vendorEmail\"ref={node => (this.inputNode = node)}/>\r\n            Vendor Password:\r\n            <input type=\"password\"password=\"vendorPassword\"ref={node => (this.inputNode = node)}/>\r\n            </label>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    }\r\n       \r\n\r\n    addMenuItem = () => {\r\n        logHelper({adminAction: \"Admin created a new hotdog!\"}) // TODO add some details here\r\n        const newHotDog = {\r\n            hotdog_name: this.state.newHotdogName,\r\n            hotdog_image: this.state.newHotdogImgUrl,\r\n            hotdog_price: this.state.newHotdogPrice\r\n        }\r\n        fetch(\"/menu\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newHotDog)\r\n        }).then(result => result.json())\r\n    }\r\n\r\n    showAddMenuItemForm() {\r\n        return <Form onSubmit={this.addMenuItem}>\r\n            <Form.Label>Hotdog Name</Form.Label>\r\n            <Form.Control placeholder=\"some name\" className=\"userInput\" onChange={(e) => this.setState({newHotdogName: e.target.value})}\r\n                          required/>\r\n            <Form.Label>Image Url</Form.Label>\r\n            <Form.Control placeholder=\"some name\" className=\"userInput\" onChange={(e) => this.setState({newHotdogImgUrl: e.target.value})}\r\n                          required/>\r\n            <Form.Label>Price</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"decimal format, e.g. 1.20\" className=\"userInput\"\r\n                          onChange={(e) => this.setState({newHotdogPrice: e.target.value})} required/>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    }\r\n\r\n    stageRemoveItem = (isChecked, id) => {\r\n        console.log(\"this is val: \" + isChecked)\r\n        console.log(\"this is id: \" + id)\r\n        const newRemoveItems = [...this.state.menuItemsToDelete]\r\n        if (!isChecked) {\r\n            this.setState({menuItemsToDelete: newRemoveItems.filter(ele => ele !== id)});\r\n        } else {\r\n            newRemoveItems.push(id);\r\n            this.setState({menuItemsToDelete: newRemoveItems});\r\n        }\r\n    }\r\n\r\n    removeMenuItems = () => {\r\n        console.log(\"this is to be removed: \" + this.state.menuItemsToDelete )\r\n        logHelper({logline: \"Admin deleted following menu items \" + this.state.menuItemsToDelete})\r\n        fetch(\"/menu\", {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state.menuItemsToDelete)\r\n        }).then(result => result.json())\r\n    }\r\n\r\n    showMenuItemRemoveForm() {\r\n        return <Form onSubmit={this.removeMenuItems}>\r\n            {this.state.masterMenuItems.map(menuItems => {\r\n                return <Form.Check\r\n                    onChange={(e) => this.stageRemoveItem(e.target.checked, e.target.id)}\r\n                    type=\"switch\"\r\n                    id={menuItems.hotdog_id} // maybe don't duplicate id and key\r\n                    label={menuItems.hotdog_name}\r\n                    key={menuItems.hotdog_id} // maybe just need this?\r\n                />\r\n            })}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    }\r\n\r\n    showAdminLogConsole() {\r\n        return <p className=\"consoleLog\">\r\n            {this.state.logItems.map(item => <div>{item.log_timestamp + '\\t' + item.log_line}</div>)}\r\n        </p>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav fill variant=\"tabs\" className=\"adminBar\">\r\n                    <Nav.Link eventKey={1} onSelect={this.handleSelect}>Add Vendor</Nav.Link>\r\n                    <Nav.Link eventKey={2} onSelect={this.handleSelect}>View Console</Nav.Link>\r\n                    <Nav.Link eventKey={3} onSelect={this.handleSelect}>Add Menu Item</Nav.Link>\r\n                    <Nav.Link eventKey={4} onSelect={this.handleSelect}>Remove Menu Item</Nav.Link>\r\n                </Nav>\r\n                {this.state.tabKey === \"1\" && this.showNewVendorForm()}\r\n                {this.state.tabKey === \"2\" && this.showAdminLogConsole()}\r\n                {this.state.tabKey === \"3\" && this.showAddMenuItemForm()}\r\n                {this.state.tabKey === \"4\" && this.showMenuItemRemoveForm()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Admin;\r\n","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Menu.js",["70","71"],"import React, {Component} from 'react';\r\nimport {Button, CardDeck, Card} from 'react-bootstrap';\r\nimport logHelper from \"./utils\";\r\n\r\n\r\nclass Menu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleIncrement.bind(this);\r\n        this.handleDecrement.bind(this);\r\n        this.numberOrdered.bind(this);\r\n        this.onSubmit.bind(this);\r\n    }\r\n\r\n    state = {menuItems: [], orderedItems: [], orderTotal: 0}\r\n\r\n    componentDidMount() {\r\n        fetch(\"/menu/\" + this.props.vendorId)\r\n            .then(res => res.json())\r\n            .then(menuItems => this.setState({menuItems}))\r\n            .then(ignored => console.log(this.state)); // remove this log statement at some point\r\n    }\r\n\r\n    handleIncrement = (hotdogId, price) => {\r\n        const currentOrders = [...this.state.orderedItems];\r\n        const orderIndex = currentOrders.findIndex(element => element.hotdog_id === hotdogId);\r\n        if (orderIndex !== -1) {\r\n            currentOrders.splice(orderIndex, 1, {\r\n                \"hotdog_id\": hotdogId,\r\n                \"quantity\": currentOrders[orderIndex].quantity + 1,\r\n                \"vendor_id\": this.props.vendorId\r\n            });\r\n        } else {\r\n            currentOrders.push({\"hotdog_id\": hotdogId, \"quantity\": 1, \"vendor_id\": this.props.vendorId});\r\n        }\r\n        const newOrderTotal = this.state.orderTotal + parseFloat(price);\r\n        this.setState({orderedItems: currentOrders, orderTotal: newOrderTotal});\r\n    }\r\n\r\n    handleDecrement = (hotdogId, price) => {\r\n        let newOrderTotal = this.state.orderTotal;\r\n        const currentOrders = [...this.state.orderedItems];\r\n        if (currentOrders.length > 0) {\r\n            const orderIndex = currentOrders.findIndex(element => element.hotdog_id === hotdogId);\r\n            if (orderIndex !== -1) {\r\n                if (currentOrders[orderIndex].quantity > 0) {\r\n                    currentOrders.splice(orderIndex, 1, {\r\n                        \"hotdog_id\": hotdogId,\r\n                        \"quantity\": currentOrders[orderIndex].quantity - 1,\r\n                        \"vendor_id\": this.props.vendorId\r\n                    })\r\n                    newOrderTotal -= price;\r\n                    this.setState({orderedItems: currentOrders, orderTotal: newOrderTotal})\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    numberOrdered = (id) => {\r\n        const found = this.state.orderedItems.find(ele => ele.hotdog_id == id);\r\n        return found ? found.quantity : 0;\r\n    }\r\n\r\n    onSubmit = () => {\r\n        //first thing we do is close modal because that is only customer facing action\r\n        this.props.showModal();\r\n        if (this.state.orderedItems.length > 0) {\r\n            logHelper({logline: \"order submitted at location \" + this.state.orderedItems[0].vendor_id})\r\n            fetch(\"/orders\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(this.state.orderedItems)\r\n            }).then(result => result.json())\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"carddecdiv\">\r\n                <CardDeck>\r\n                    {this.state.menuItems.map(menuItem =>\r\n                        <div key={menuItem.hotdog_id}>\r\n                            <Card>\r\n                                <Card.Img id={menuItem.hotdog_id}                                   \r\n                                   src={menuItem.hotdog_image}>\r\n                                </Card.Img>\r\n                                <Card.Body id={menuItem.hotdog_id}>\r\n                                    <Card.Title>{menuItem.hotdog_name}</Card.Title>\r\n                                    {this.numberOrdered(menuItem.hotdog_id) !== 0 &&\r\n                                    <Card.Text>number in cart: {this.numberOrdered(menuItem.hotdog_id)}</Card.Text>\r\n                                    }\r\n                                    <Button variant=\"outline-dark\"\r\n                                            onClick={() => this.handleIncrement(menuItem.hotdog_id, menuItem.hotdog_price)}>\r\n                                        +\r\n                                    </Button>\r\n                                    <Button variant=\"outline-dark\"\r\n                                            onClick={() => this.handleDecrement(menuItem.hotdog_id, menuItem.hotdog_price)}>\r\n                                        -\r\n                                    </Button>\r\n                                </Card.Body>\r\n                                <Card.Footer>${menuItem.hotdog_price}</Card.Footer>\r\n                            </Card>\r\n                        </div>\r\n                    )}\r\n                </CardDeck>\r\n                <Button variant=\"primary\" onClick={this.onSubmit}> Submit your order!\r\n                    ${this.state.orderTotal.toFixed(2)} </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\config\\Fire.js",[],"C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\components\\LoginRegister.js",[],"C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\components\\LogOut.js",[],"C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\Vendor.js",["72","73","74"],"import React, {Component} from 'react';\r\nimport {Form, Nav, Button} from 'react-bootstrap';\r\nimport OrdersTable from './ordersTable';\r\n\r\nclass Vendor extends React.Component {\r\n\r\n    state = {\r\n        tabKey: \"1\",\r\n        orders: [],\r\n\r\n    }\r\n\r\n    handleSelect = (eventKey) => {\r\n        this.setState({tabKey: eventKey})\r\n        console.log(this.state.tabKey === \"1\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav fill variant=\"tabs\" className=\"vendorBar\">\r\n                    <Nav.Link eventKey={1} onSelect={this.handleSelect}>Orders</Nav.Link>\r\n                    <Nav.Link eventKey={2} onSelect={this.handleSelect}>Update Location</Nav.Link>\r\n                    <Nav.Link eventKey={3} onSelect={this.handleSelect}>Update Menu</Nav.Link>\r\n                </Nav>\r\n                {this.state.tabKey === \"1\" && <OrdersTable/>}\r\n\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Vendor;","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\MapContainer.jsx",["75"],"import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Menu from \"./Menu\"\r\n\r\nconst mapStyles = {\r\n    position: 'absolute',\r\n    width: 1114,\r\n    height: 400\r\n};\r\n\r\nconst image = \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\r\nconst locationMarker = \"http://maps.google.com/mapfiles/ms/icons/red.png\";\r\n\r\nclass MapContainer extends React.Component {\r\n\r\n    state = {\r\n        activeMarker: {},\r\n        selectedVendor: {},\r\n        showingInfoWindow: false,\r\n        showingModal: false,\r\n        locations: []\r\n    };\r\n\r\n    showModal = () => {\r\n        console.log(\"showmodal executed\")\r\n        this.setState({ showingModal: !this.state.showingModal })\r\n    }\r\n\r\n    onMarkerClick = (props, marker) => {\r\n        this.setState({\r\n            activeMarker: marker,\r\n            selectedVendor: props,\r\n            showingInfoWindow: true,\r\n            showingModal: true\r\n        })\r\n    };\r\n\r\n    onInfoWindowClose = () =>\r\n        this.setState({\r\n            activeMarker: null,\r\n            showingInfoWindow: false\r\n        });\r\n\r\n    onMapClicked = () => {\r\n        if (this.state.showingInfoWindow)\r\n            this.setState({\r\n                activeMarker: null,\r\n                showingInfoWindow: false\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(\"/vendors\")\r\n            .then(res => res.json())\r\n            .then(data => this.setState({ locations: data }))\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.watchPosition((position) => {\r\n                this.setState({\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude,\r\n                });\r\n            },\r\n                (error) => console.log(error),\r\n\r\n            );\r\n        } else {\r\n            alert('Geolocation is not available')\r\n        }\r\n    };\r\n\r\n\r\n    renderMarkers() {\r\n        return this.state.locations.map((locations, i) => {\r\n            return <Marker\r\n                key={i}\r\n                id={locations.location_id}\r\n                position={{ lat: locations.latitude, lng: locations.longitude }}\r\n                name={locations.name}\r\n                icon={image}\r\n                onClick={this.onMarkerClick} />\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"theMap\">\r\n                <Map\r\n                    google={this.props.google}\r\n                    onClick={this.onMapClicked}\r\n                    zoom={10}\r\n                    style={mapStyles}\r\n                    initialCenter={{lat: 47.62111, lng: -122.34930}}\r\n                    resetBoundsOnResize={true}\r\n                >\r\n\r\n                    {this.renderMarkers()}\r\n\r\n                    {<Marker\r\n\r\n                        position={{ lat: this.state.lat, lng: this.state.lng }}\r\n                        icon={locationMarker}\r\n                        title=\"You Are Here!\"\r\n                    />}\r\n\r\n                    <InfoWindow\r\n                        marker={this.state.activeMarker}\r\n                        onClose={this.onInfoWindowClose}\r\n                        visible={this.state.showingInfoWindow}\r\n                    >\r\n                        <div>\r\n                            <h4>Vendor Name: {this.state.selectedVendor.name}</h4>\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n\r\n                <Modal show={this.state.showingModal} onHide={this.showModal}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>This is going to be a menu!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body><Menu vendorId={this.state.selectedVendor.id} showModal={this.showModal}></Menu></Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button onClick={this.showModal}>Close Window</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ''\r\n})(MapContainer);\r\n","C:\\Users\\naceres\\GitHub\\ad320-thurs-w21-team1\\frontend-react\\src\\ordersTable.js",["76","77","78","79"],"import React, { Component } from 'react';\r\nimport { Form, Nav, Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass OrdersTable extends React.Component {\r\n\r\n    state = {\r\n        orders: [],\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/orders')\r\n            .then(res => {\r\n                res.json().then(body => {\r\n                    console.log(`body: ${JSON.stringify(body)}`);\r\n                    this.setState({ orders: body });\r\n                });\r\n            })\r\n    }\r\n\r\n    onClickComplete(orderId) {\r\n        console.log(`Clicked complete on id ${orderId}`)\r\n        fetch('/orders/status', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(orderId)\r\n        }).then(result => console.log(result))\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (!this.state.orders) {\r\n            return;\r\n        }\r\n        const rows = this.state.orders.map(order => (\r\n            <tr>\r\n                <td>{order.order_id}</td>\r\n                <td>{order.date}</td>\r\n                <td>{order.location_id}</td>\r\n                <td>{order.person_id}</td>\r\n                <td>{order.complete}</td>\r\n                <td><button onClick={() => this.onClickComplete(order.order_id)}>Complete</button></td>\r\n            </tr>\r\n        ));\r\n        return (\r\n\r\n\r\n            <table style={{ \"borderWidth\": \"1px\", \"border-spacing\": \"5px\", 'borderColor': \"#aaaaaa\", 'borderStyle': 'solid' }}>\r\n                <tr><td>Order id</td><td>Date</td><td>Location</td><td>Customer</td><td>Status</td><td>Actions</td></tr>\r\n                {rows}\r\n            </table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrdersTable;",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":62,"column":73,"nodeType":"92","messageId":"93","endLine":62,"endColumn":75},{"ruleId":"86","severity":1,"message":"87","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"94","line":2,"column":9,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"86","severity":1,"message":"95","line":2,"column":20,"nodeType":"88","messageId":"89","endLine":2,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"94","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"96","line":2,"column":16,"nodeType":"88","messageId":"89","endLine":2,"endColumn":19},{"ruleId":"86","severity":1,"message":"95","line":2,"column":21,"nodeType":"88","messageId":"89","endLine":2,"endColumn":27},{"ruleId":"82","replacedBy":"97"},{"ruleId":"84","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'Button' is defined but never used.","'Nav' is defined but never used.",["99"],["100"],"no-global-assign","no-unsafe-negation"]