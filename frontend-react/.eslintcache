[{"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/index.js":"1","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Main.js":"2","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Home.js":"3","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Admin.js":"4","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Contact.js":"5","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Menu.js":"6","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/config/Fire.js":"7","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/MapContainer.jsx":"8","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/components/LoginRegister.js":"9","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/components/LogOut.js":"10","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/utils.js":"11","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Vendor.js":"12","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/ordersTable.js":"13","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/InfoWindowWrapper.js":"14","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/VendorAvailability.js":"15"},{"size":180,"mtime":1615697166248,"results":"16","hashOfConfig":"17"},{"size":3546,"mtime":1616110916721,"results":"18","hashOfConfig":"17"},{"size":450,"mtime":1616110027380,"results":"19","hashOfConfig":"17"},{"size":7054,"mtime":1616110494131,"results":"20","hashOfConfig":"17"},{"size":399,"mtime":1613095535275,"results":"21","hashOfConfig":"17"},{"size":5244,"mtime":1615777939475,"results":"22","hashOfConfig":"17"},{"size":443,"mtime":1614740741803,"results":"23","hashOfConfig":"17"},{"size":4376,"mtime":1616110916735,"results":"24","hashOfConfig":"17"},{"size":2897,"mtime":1615268494520,"results":"25","hashOfConfig":"17"},{"size":339,"mtime":1614906369481,"results":"26","hashOfConfig":"17"},{"size":362,"mtime":1615532885012,"results":"27","hashOfConfig":"17"},{"size":2748,"mtime":1616110916715,"results":"28","hashOfConfig":"17"},{"size":3873,"mtime":1616110916744,"results":"29","hashOfConfig":"17"},{"size":770,"mtime":1615777939472,"results":"30","hashOfConfig":"17"},{"size":880,"mtime":1616110916726,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"6x5xf",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/index.js",[],["69","70"],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Main.js",["71","72"],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Home.js",["73","74","75"],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Admin.js",["76"],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Contact.js",["77"],"import React, { Component } from 'react';\n\n\nclass Contact extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <p>This is contact</p>\n                <ul>\n                    <li>Some stuff</li>\n                    <li>Some stuff</li>\n                    <li>Some stuff</li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Contact;\n","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Menu.js",["78","79"],"import React, {Component} from 'react';\nimport {Button, CardDeck, Card} from 'react-bootstrap';\nimport logHelper from \"./utils\";\n\n\nclass Menu extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleIncrement.bind(this);\n        this.handleDecrement.bind(this);\n        this.numberOrdered.bind(this);\n        this.onSubmit.bind(this);\n    }\n\n    state = {menuItems: [], orderedItems: [], orderTotal: 0}\n\n    componentDidMount() {\n        fetch(\"/menu/\" + this.props.vendorId)\n            .then(res => res.json())\n            .then(menuItems => this.setState({menuItems}))\n            .then(ignored => console.log(this.state)); // remove this log statement at some point\n    }\n\n    handleIncrement = (hotdogId, price) => {\n        const currentOrders = [...this.state.orderedItems];\n        const orderIndex = currentOrders.findIndex(element => element.hotdog_id === hotdogId);\n        if (orderIndex !== -1) {\n            currentOrders.splice(orderIndex, 1, {\n                \"hotdog_id\": hotdogId,\n                \"quantity\": currentOrders[orderIndex].quantity + 1,\n                \"vendor_id\": this.props.vendorId\n            });\n        } else {\n            currentOrders.push({\"hotdog_id\": hotdogId, \"quantity\": 1, \"vendor_id\": this.props.vendorId});\n        }\n        const newOrderTotal = this.state.orderTotal + parseFloat(price);\n        this.setState({orderedItems: currentOrders, orderTotal: newOrderTotal});\n    }\n\n    handleDecrement = (hotdogId, price) => {\n        let newOrderTotal = this.state.orderTotal;\n        const currentOrders = [...this.state.orderedItems];\n        if (currentOrders.length > 0) {\n            const orderIndex = currentOrders.findIndex(element => element.hotdog_id === hotdogId);\n            if (orderIndex !== -1) {\n                if (currentOrders[orderIndex].quantity > 0) {\n                    currentOrders.splice(orderIndex, 1, {\n                        \"hotdog_id\": hotdogId,\n                        \"quantity\": currentOrders[orderIndex].quantity - 1,\n                        \"vendor_id\": this.props.vendorId\n                    })\n                    newOrderTotal -= price;\n                    this.setState({orderedItems: currentOrders, orderTotal: newOrderTotal})\n                }\n            }\n        }\n    }\n\n    numberOrdered = (id) => {\n        const found = this.state.orderedItems.find(ele => ele.hotdog_id == id);\n        return found ? found.quantity : 0;\n    }\n\n    onSubmit = () => {\n        //first thing we do is close modal because that is only customer facing action\n        this.props.showModal();\n        if (this.state.orderedItems.length > 0) {\n            logHelper({logline: \"order submitted at location \" + this.state.orderedItems[0].vendor_id})\n            fetch(\"/orders\", {\n                method: \"POST\",\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(this.state.orderedItems)\n            }).then(result => result.json())\n        }\n    }\n\n\n    render() {\n        return (\n            <div id=\"carddecdiv\">\n                <CardDeck>\n                    {this.state.menuItems.map(menuItem =>\n                        <div key={menuItem.hotdog_id}>\n                            <Card>\n                                <Card.Img id={menuItem.hotdog_id}                                   \n                                   src={menuItem.hotdog_image}>\n                                </Card.Img>\n                                <Card.Body id={menuItem.hotdog_id}>\n                                    <Card.Title>{menuItem.hotdog_name}</Card.Title>\n                                    {this.numberOrdered(menuItem.hotdog_id) !== 0 &&\n                                    <Card.Text>number in cart: {this.numberOrdered(menuItem.hotdog_id)}</Card.Text>\n                                    }\n                                    <Button variant=\"outline-dark\"\n                                            onClick={() => this.handleIncrement(menuItem.hotdog_id, menuItem.hotdog_price)}>\n                                        +\n                                    </Button>\n                                    <Button variant=\"outline-dark\"\n                                            onClick={() => this.handleDecrement(menuItem.hotdog_id, menuItem.hotdog_price)}>\n                                        -\n                                    </Button>\n                                </Card.Body>\n                                <Card.Footer>${menuItem.hotdog_price}</Card.Footer>\n                            </Card>\n                        </div>\n                    )}\n                </CardDeck>\n                <Button variant=\"primary\" onClick={this.onSubmit}> Submit your order!\n                    ${this.state.orderTotal.toFixed(2)} </Button>\n            </div>\n        );\n    }\n}\n\nexport default Menu;\n","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/config/Fire.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/MapContainer.jsx",["80"],"import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Menu from \"./Menu\"\n\nconst mapStyles = {\n    width: '80%',\n    height: '70%'\n};\n\nconst image = \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\nconst locationMarker = \"http://maps.google.com/mapfiles/ms/icons/red.png\";\n\nclass MapContainer extends React.Component {\n\n    state = {\n        activeMarker: {},\n        selectedVendor: {},\n        showingInfoWindow: false,\n        showingModal: false,\n        locations: []\n    };\n\n    showModal = () => {\n        console.log(\"showmodal executed\")\n        this.setState({ showingModal: !this.state.showingModal })\n    }\n\n    onMarkerClick = (props, marker) => {\n        this.setState({\n            activeMarker: marker,\n            selectedVendor: props,\n            showingInfoWindow: true,\n            showingModal: true\n        })\n    };\n\n    onInfoWindowClose = () =>\n        this.setState({\n            activeMarker: null,\n            showingInfoWindow: false\n        });\n\n    onMapClicked = () => {\n        if (this.state.showingInfoWindow)\n            this.setState({\n                activeMarker: null,\n                showingInfoWindow: false\n            });\n    };\n\n    componentDidMount() {\n        fetch(\"/vendors\")\n            .then(res => res.json())\n            .then(data => this.setState({ locations: data }))\n        if (navigator.geolocation) {\n            navigator.geolocation.watchPosition((position) => {\n                this.setState({\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude,\n                });\n            },\n                (error) => console.log(error),\n\n            );\n        } else {\n            alert('Geolocation is not available')\n        }\n    };\n\n\n    renderMarkers() {\n        return this.state.locations.map((locations, i) => {\n            return <Marker\n                key={i}\n                id={locations.location_id}\n                position={{ lat: locations.latitude, lng: locations.longitude }}\n                name={locations.name}\n                icon={image}\n                onClick={this.onMarkerClick} />\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"theMap\">\n                <Map\n                    google={this.props.google}\n                    onClick={this.onMapClicked}\n                    zoom={10}\n                    style={mapStyles}\n                    initialCenter={{lat: 47.62111, lng: -122.34930}}\n                    resetBoundsOnResize={true}\n                >\n\n                    {this.renderMarkers()}\n\n                    {<Marker\n\n                        position={{ lat: this.state.lat, lng: this.state.lng }}\n                        icon={locationMarker}\n                        title=\"You Are Here!\"\n                    />}\n\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        onClose={this.onInfoWindowClose}\n                        visible={this.state.showingInfoWindow}\n                    >\n                        <div>\n                            <h4>Vendor Name: {this.state.selectedVendor.name}</h4>\n                        </div>\n                    </InfoWindow>\n                </Map>\n\n                <Modal show={this.state.showingModal}>\n                    <Modal.Header>\n                        <Modal.Title>This is going to be a menu!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body><Menu vendorId={this.state.selectedVendor.id} showModal={this.showModal}></Menu></Modal.Body>\n                    <Modal.Footer>\n                        <button onClick={this.showModal}>Close Window</button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: ''\n})(MapContainer);\n","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/components/LoginRegister.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/components/LogOut.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/utils.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/Vendor.js",["81"],"import React, {Component} from 'react';\nimport {Form, Nav, Button} from 'react-bootstrap';\nimport OrdersTable from './ordersTable';\nimport VendorAvailability from './VendorAvailability';\nimport logHelper from './utils'\n\nclass Vendor extends React.Component {\n\n    state = {\n        tabKey: \"1\",\n        orders: [],\n        newLatitude: 0,\n        newLongitude: 0\n    }\n\n    handleSelect = (eventKey) => {\n        this.setState({tabKey: eventKey})\n        console.log(this.state.tabKey === \"1\")\n    }\n\n    componentDidMount() {\n        fetch(\"/logging\")\n            .then(res => res.json())\n            .then(logItems => this.setState({logItems}))\n    }\n\n    showUpdateLocationForm() {\n        return <Form onSubmit={this.updateVendorLocation}>\n            <Form.Label>New Latitude</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"decimal format, e.g. 50.12345\" className=\"userInput\"\n                          onChange={(e) => this.setState({newLatitude: e.target.value})} required/>\n            <Form.Label>New Longitude</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"decimal format, e.g. 50.12345\" className=\"userInput\"\n                          onChange={(e) => this.setState({newLongitude: e.target.value})} required/>\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n        </Form>\n    }\n\n    updateVendorLocation = () => {\n        logHelper({logline: `Vendor user ${this.props.user.person_id} updated their cart location!`})\n        const newLocation = {\n            latitude: this.state.newLatitude,\n            longitude: this.state.newLongitude\n        }\n        fetch(`vendors/${this.props.user.person_id}/location`, {\n            method: \"PUT\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(newLocation)\n        }).then(result => result.json())\n    }\n\n    \n    render() {\n        return (\n            <div>\n                <Nav fill variant=\"tabs\" className=\"vendorBar\">\n                    <Nav.Link eventKey={1} onSelect={this.handleSelect}>Orders</Nav.Link>\n                    <Nav.Link eventKey={2} onSelect={this.handleSelect}>Update Location</Nav.Link>\n                    <Nav.Link eventKey={3} onSelect={this.handleSelect}>Update Menu</Nav.Link>\n                    <Nav.Link eventKey={4} onSelect={this.handleSelect}>Update Vendor Availability</Nav.Link>\n                </Nav>\n                {this.state.tabKey === \"1\" && <OrdersTable/>}\n                {this.state.tabKey === \"2\" && this.showUpdateLocationForm()}\n                {this.state.tabKey === \"4\" && <VendorAvailability user={this.props.user}/>}\n            </div>\n        )\n    }\n}\n\nexport default Vendor;\n","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/ordersTable.js",["82","83","84","85"],"import React, { Component } from 'react';\nimport { Form, Nav, Button } from 'react-bootstrap';\n\n\n\nclass OrdersTable extends React.Component {\n\n    state = {\n        orders: [],\n\n    }\n\n    componentDidMount() {\n        fetch('/orders')\n            .then(res => {\n                res.json().then(body => {\n                    console.log(`body: ${JSON.stringify(body)}`);\n                    this.setState({ orders: body });\n                });\n            })\n    }\n\n    onClickComplete(orderId) {\n        console.log(`Clicked complete on id ${orderId}`)\n        fetch('/orders/status', {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(orderId)\n        }).then(result => console.log(result))\n\n\n    };\n\n\n\n    render() {\n\n        if (!this.state.orders) {\n            return;\n        }\n        const rows = this.state.orders.map(order => (\n            <tr>\n                <td>{order.order_id}</td>\n                <td>{order.date}</td>\n                <td>{order.location_id}</td>\n                <td>{order.person_id}</td>\n                <td>{order.complete}</td>\n                <td><button onClick={() => this.onClickComplete(order.order_id)}>Complete</button></td>\n            </tr>\n        ));\n        return (\n\n\n            <table style={{ \"borderWidth\": \"1px\", \"border-spacing\": \"5px\", 'borderColor': \"#aaaaaa\", 'borderStyle': 'solid' }}>\n                <tr><td>Order id</td><td>Date</td><td>Location</td><td>Customer</td><td>Status</td><td>Actions</td></tr>\n                {rows}\n            </table>\n\n        )\n    }\n}\n\nexport default OrdersTable;","/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/InfoWindowWrapper.js",[],"/Users/daleberg/AD-320Folder/ad320-thurs-w21-team1/frontend-react/src/VendorAvailability.js",["86"],"import React, { Component } from 'react';\nimport {Form} from \"react-bootstrap\";\nimport logHelper from \"./utils\";\nclass ToggleSwitch extends Component {\n    constructor(props) {\n        super(props);\n    }\n    markUnavailable = () => {\n        logHelper({logline:\"Vendor marked self unavailable\"})\n        console.log(this.props.user.person_id)\n    }\n    render() {\n        return (\n            <div className=\"toggle-switch\">\n                {this.props.user.person_id}\n                <Form>\n                        <Form.Check\n                            onChange={() => this.markUnavailable()}\n                            type=\"switch\"\n                            id={\"id\"}\n                            label={\"Switch the toggle off to make yourself unavailable\"}\n                            key={\"toggle\"}\n                        />\n                </Form>\n            </div>\n        );\n    }\n}\nexport default ToggleSwitch;",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"95","line":11,"column":9,"nodeType":"93","messageId":"94","endLine":11,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"96","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":12},{"ruleId":"97","severity":1,"message":"98","line":5,"column":5,"nodeType":"99","messageId":"100","endLine":7,"endColumn":6},{"ruleId":"91","severity":1,"message":"92","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":62,"column":73,"nodeType":"103","messageId":"104","endLine":62,"endColumn":75},{"ruleId":"91","severity":1,"message":"92","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"105","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"106","line":2,"column":16,"nodeType":"93","messageId":"94","endLine":2,"endColumn":19},{"ruleId":"91","severity":1,"message":"95","line":2,"column":21,"nodeType":"93","messageId":"94","endLine":2,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":6,"column":5,"nodeType":"99","messageId":"100","endLine":8,"endColumn":6},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'fire' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'Nav' is defined but never used.","no-global-assign","no-unsafe-negation"]